pipeline {
    agent {
       node {
         label "java-slave"
      }
    }
    environment {
        PATH="/usr/local/apache-maven-3.9.0/bin:$PATH"
    }
    stages {
        stage('Build') {
            steps {
                echo '<--------------- Building --------------->'
                sh 'printenv'
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo '<------------- Build completed --------------->'
            }
        }
        stage('Unit Test') {
            steps {
                echo '<--------------- Unit testing Started --------------->'
                sh 'mvn surefire-report:report'
                echo '<------------- Unit testing Completed --------------->'
            }
        }
        stage("sonar analysis"){
            environment {
               scannerHome = tool 'sonarqube-cloud'
            }
            steps {
                echo '<--------------- Sonar Analysis started  --------------->'
                withSonarQubeEnv('sonarqube-cloud') {    
                    sh "${scannerHome}/bin/sonar-scanner"
                }    
              echo '<--------------- Sonar Analysis stopped  --------------->' 
            }
        }
            stage("Quality Gate"){
            steps {
                echo '<--------------- Sonar gate Analysis started  --------------->'
                timeout(time: 1, unit: 'HOURS'){
                    def qg = waitForQualityGate()
                    if (qg.status !='OK'){
                        error "Pipeline Failed due to quality gate failures: ${qg.status}"
                    }
                }
                                }    
              echo '<--------------- Sonar Analysis stopped  --------------->' 
            }
        }
     } 
